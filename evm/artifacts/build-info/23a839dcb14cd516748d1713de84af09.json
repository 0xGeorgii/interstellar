{
	"id": "23a839dcb14cd516748d1713de84af09",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/SeriesEpochManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.23;\n\n/// @title A helper contract to manage nonce with the series\ncontract SeriesEpochManager {\n    error AdvanceEpochFailed();\n    event EpochIncreased(address indexed maker, uint256 series, uint256 newEpoch);\n\n    // {\n    //    1: {\n    //        '0x762f73Ad...842Ffa8': 0,\n    //        '0xd20c41ee...32aaDe2': 1\n    //    },\n    //    2: {\n    //        '0x762f73Ad...842Ffa8': 3,\n    //        '0xd20c41ee...32aaDe2': 15\n    //    },\n    //    ...\n    // }\n    mapping(uint256 seriesId => uint256 epoch) private _epochs;\n\n    /// @notice Returns nonce for `maker` and `series`\n    function epoch(address maker, uint96 series) public view returns(uint256) {\n        return _epochs[uint160(maker) | (uint256(series) << 160)];\n    }\n\n    /// @notice Advances nonce by one\n    function increaseEpoch(uint96 series) external {\n        advanceEpoch(series, 1);\n    }\n\n    /// @notice Advances nonce by specified amount\n    function advanceEpoch(uint96 series, uint256 amount) public {\n        if (amount == 0 || amount > 255) revert AdvanceEpochFailed();\n        unchecked {\n            uint256 key = uint160(msg.sender) | (uint256(series) << 160);\n            uint256 newEpoch = _epochs[key] + amount;\n            _epochs[key] = newEpoch;\n            emit EpochIncreased(msg.sender, series, newEpoch);\n        }\n    }\n\n    /// @notice Checks if `maker` has specified `makerEpoch` for `series`\n    /// @return Result True if `maker` has specified epoch. Otherwise, false\n    function epochEquals(address maker, uint256 series, uint256 makerEpoch) public view returns(bool) {\n        return _epochs[uint160(maker) | (uint256(series) << 160)] == makerEpoch;\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SeriesEpochManager.sol": {
				"SeriesEpochManager": {
					"abi": [
						{
							"inputs": [],
							"name": "AdvanceEpochFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "maker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "series",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newEpoch",
									"type": "uint256"
								}
							],
							"name": "EpochIncreased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "series",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "advanceEpoch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "maker",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "series",
									"type": "uint96"
								}
							],
							"name": "epoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "maker",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "series",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "makerEpoch",
									"type": "uint256"
								}
							],
							"name": "epochEquals",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "series",
									"type": "uint96"
								}
							],
							"name": "increaseEpoch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"epochEquals(address,uint256,uint256)": {
								"returns": {
									"_0": "Result True if `maker` has specified epoch. Otherwise, false"
								}
							}
						},
						"title": "A helper contract to manage nonce with the series",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001657610266908161001b8239f35b5f80fdfe60806040908082526004361015610014575f80fd5b5f3560e01c9081630d2c7c161461016457508063c3cf8043146100ed578063ce3d710a146100a85763fcea9e4e1461004a575f80fd5b346100a457806003193601126100a45761006261021a565b90602435916001600160601b03831683036100a4576020926001600160601b0360a01b9060a01b169060018060a01b0316175f525f8252805f20549051908152f35b5f80fd5b50346100a45760603660031901126100a4576020906100c561021a565b6001600160a01b031660243560a01b175f908152808352819020549051604435919091148152f35b50346100a45760203660031901126100a4577f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf8099396610128610204565b916001600160601b0360a01b8360a01b1633175f525f602052805f2060018154018091556001600160601b0382519416845260208401523392a2005b82346100a457806003193601126100a45761017d610204565b90602435801580156101fa575b6101eb57907f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf8099396916001600160601b0360a01b8460a01b1633175f525f602052815f20908154018091556001600160601b0382519416845260208401523392a2005b63555fbbbf60e01b8452600484fd5b5060ff811161018a565b600435906001600160601b03821682036100a457565b600435906001600160a01b03821682036100a45756fea264697066735822122052ae64097272d50eea648b9982f8c12e47b410a0404d59c10cda1b030743cde264736f6c63430008170033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x266 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD2C7C16 EQ PUSH2 0x164 JUMPI POP DUP1 PUSH4 0xC3CF8043 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xCE3D710A EQ PUSH2 0xA8 JUMPI PUSH4 0xFCEA9E4E EQ PUSH2 0x4A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA4 JUMPI PUSH2 0x62 PUSH2 0x21A JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP4 SUB PUSH2 0xA4 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND OR PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xC5 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHL OR PUSH0 SWAP1 DUP2 MSTORE DUP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xA4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA4 JUMPI PUSH32 0x99133AEFC2C2D1E56F8EF3622EC8E80979A0713FC9C4E1497740EFCF8099396 PUSH2 0x128 PUSH2 0x204 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 PUSH1 0xA0 SHL AND CALLER OR PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD DUP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 MLOAD SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0xA4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA4 JUMPI PUSH2 0x17D PUSH2 0x204 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI JUMPDEST PUSH2 0x1EB JUMPI SWAP1 PUSH32 0x99133AEFC2C2D1E56F8EF3622EC8E80979A0713FC9C4E1497740EFCF8099396 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 PUSH1 0xA0 SHL AND CALLER OR PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD ADD DUP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 MLOAD SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 STOP JUMPDEST PUSH4 0x555FBBBF PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x18A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA4 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA4 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xAE PUSH5 0x97272D50E 0xEA PUSH5 0x8B9982F8C1 0x2E SELFBALANCE 0xB4 LT LOG0 BLOCKHASH 0x4D MSIZE 0xC1 0xC 0xDA SHL SUB SMOD NUMBER 0xCD 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "119:1597:0:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint96": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040908082526004361015610014575f80fd5b5f3560e01c9081630d2c7c161461016457508063c3cf8043146100ed578063ce3d710a146100a85763fcea9e4e1461004a575f80fd5b346100a457806003193601126100a45761006261021a565b90602435916001600160601b03831683036100a4576020926001600160601b0360a01b9060a01b169060018060a01b0316175f525f8252805f20549051908152f35b5f80fd5b50346100a45760603660031901126100a4576020906100c561021a565b6001600160a01b031660243560a01b175f908152808352819020549051604435919091148152f35b50346100a45760203660031901126100a4577f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf8099396610128610204565b916001600160601b0360a01b8360a01b1633175f525f602052805f2060018154018091556001600160601b0382519416845260208401523392a2005b82346100a457806003193601126100a45761017d610204565b90602435801580156101fa575b6101eb57907f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf8099396916001600160601b0360a01b8460a01b1633175f525f602052815f20908154018091556001600160601b0382519416845260208401523392a2005b63555fbbbf60e01b8452600484fd5b5060ff811161018a565b600435906001600160601b03821682036100a457565b600435906001600160a01b03821682036100a45756fea264697066735822122052ae64097272d50eea648b9982f8c12e47b410a0404d59c10cda1b030743cde264736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD2C7C16 EQ PUSH2 0x164 JUMPI POP DUP1 PUSH4 0xC3CF8043 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xCE3D710A EQ PUSH2 0xA8 JUMPI PUSH4 0xFCEA9E4E EQ PUSH2 0x4A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA4 JUMPI PUSH2 0x62 PUSH2 0x21A JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP4 SUB PUSH2 0xA4 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND OR PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xC5 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHL OR PUSH0 SWAP1 DUP2 MSTORE DUP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xA4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA4 JUMPI PUSH32 0x99133AEFC2C2D1E56F8EF3622EC8E80979A0713FC9C4E1497740EFCF8099396 PUSH2 0x128 PUSH2 0x204 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 PUSH1 0xA0 SHL AND CALLER OR PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD DUP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 MLOAD SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0xA4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA4 JUMPI PUSH2 0x17D PUSH2 0x204 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI JUMPDEST PUSH2 0x1EB JUMPI SWAP1 PUSH32 0x99133AEFC2C2D1E56F8EF3622EC8E80979A0713FC9C4E1497740EFCF8099396 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 PUSH1 0xA0 SHL AND CALLER OR PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD ADD DUP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 MLOAD SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 STOP JUMPDEST PUSH4 0x555FBBBF PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x18A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA4 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA4 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xAE PUSH5 0x97272D50E 0xEA PUSH5 0x8B9982F8C1 0x2E SELFBALANCE 0xB4 LT LOG0 BLOCKHASH 0x4D MSIZE 0xC1 0xC 0xDA SHL SUB SMOD NUMBER 0xCD 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "119:1597:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;119:1597:0;;;;;;;;-1:-1:-1;;;;;119:1597:0;;;776:3;119:1597;;;;;;;;;739:41;119:1597;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;119:1597:0;;;;;;;;:::i;:::-;-1:-1:-1;;;;;119:1597:0;;;1688:3;119:1597;1651:41;119:1597;;;;;;;;;;;;;;;1643:64;;;;119:1597;;;;;;;;;;-1:-1:-1;;119:1597:0;;;;1310:44;119:1597;;:::i;:::-;;-1:-1:-1;;;;;119:1597:0;;;1196:3;119:1597;;1162:10;1154:46;119:1597;;;;;;;;910:1;119:1597;;;;;;-1:-1:-1;;;;;119:1597:0;;;;;;;;;;1162:10;1310:44;;119:1597;;;;;;;;;;;;;;;;:::i;:::-;;;;1050:11;;:27;;;;119:1597;1046:60;;119:1597;1310:44;119:1597;-1:-1:-1;;;;;119:1597:0;;;1196:3;119:1597;;1162:10;1154:46;119:1597;;;;;;;;;;;;;;;-1:-1:-1;;;;;119:1597:0;;;;;;;;;;1162:10;1310:44;;119:1597;1046:60;-1:-1:-1;;;1086:20:0;;119:1597;1086:20;;1050:27;1065:12;1074:3;1065:12;;1050:27;;119:1597;;;;-1:-1:-1;;;;;119:1597:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;119:1597:0;;;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AdvanceEpochFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"series\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEpoch\",\"type\":\"uint256\"}],\"name\":\"EpochIncreased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"series\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"advanceEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"series\",\"type\":\"uint96\"}],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"series\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerEpoch\",\"type\":\"uint256\"}],\"name\":\"epochEquals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"series\",\"type\":\"uint96\"}],\"name\":\"increaseEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"epochEquals(address,uint256,uint256)\":{\"returns\":{\"_0\":\"Result True if `maker` has specified epoch. Otherwise, false\"}}},\"title\":\"A helper contract to manage nonce with the series\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"advanceEpoch(uint96,uint256)\":{\"notice\":\"Advances nonce by specified amount\"},\"epoch(address,uint96)\":{\"notice\":\"Returns nonce for `maker` and `series`\"},\"epochEquals(address,uint256,uint256)\":{\"notice\":\"Checks if `maker` has specified `makerEpoch` for `series`\"},\"increaseEpoch(uint96)\":{\"notice\":\"Advances nonce by one\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SeriesEpochManager.sol\":\"SeriesEpochManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SeriesEpochManager.sol\":{\"keccak256\":\"0x9d03f20594ca58ba892ad2e015f3fdade1ed8634073cd2dcc6498a98acc79541\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eb4af3779131b166d4529c2123b9cb00f9f59e1dbff3814948d37cf193c8184\",\"dweb:/ipfs/Qme1qvRRPcac4qYQu1nUFyd4Gu4iP6nqvSEr28F8VbJqQ1\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"advanceEpoch(uint96,uint256)": {
								"notice": "Advances nonce by specified amount"
							},
							"epoch(address,uint96)": {
								"notice": "Returns nonce for `maker` and `series`"
							},
							"epochEquals(address,uint256,uint256)": {
								"notice": "Checks if `maker` has specified `makerEpoch` for `series`"
							},
							"increaseEpoch(uint96)": {
								"notice": "Advances nonce by one"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SeriesEpochManager.sol": {
				"id": 0
			}
		}
	}
}