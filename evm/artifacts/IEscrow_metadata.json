{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "InvalidCaller",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidImmutables",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSecret",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidTime",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NativeTokenSendingFailure",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "EscrowCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "secret",
						"type": "bytes32"
					}
				],
				"name": "EscrowWithdrawal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "FundsRescued",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "FACTORY",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PROXY_BYTECODE_HASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "RESCUE_DELAY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "orderHash",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "hashlock",
								"type": "bytes32"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "taker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "Timelocks",
								"name": "timelocks",
								"type": "uint256"
							}
						],
						"internalType": "struct IBaseEscrow.Immutables",
						"name": "immutables",
						"type": "tuple"
					}
				],
				"name": "cancel",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "orderHash",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "hashlock",
								"type": "bytes32"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "taker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "Timelocks",
								"name": "timelocks",
								"type": "uint256"
							}
						],
						"internalType": "struct IBaseEscrow.Immutables",
						"name": "immutables",
						"type": "tuple"
					}
				],
				"name": "rescueFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "secret",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "orderHash",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "hashlock",
								"type": "bytes32"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "taker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "Timelocks",
								"name": "timelocks",
								"type": "uint256"
							}
						],
						"internalType": "struct IBaseEscrow.Immutables",
						"name": "immutables",
						"type": "tuple"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"custom:security-contact": "security@1inch.io",
			"events": {
				"EscrowWithdrawal(bytes32)": {
					"params": {
						"secret": "The secret that unlocks the escrow."
					}
				},
				"FundsRescued(address,uint256)": {
					"params": {
						"amount": "The amount of tokens rescued.",
						"token": "The address of the token rescued. Zero address for native token."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"details": "The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.",
					"params": {
						"immutables": "The immutables of the escrow contract."
					}
				},
				"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"details": "Funds can only be rescued by the taker after the rescue delay.",
					"params": {
						"amount": "The amount of tokens to rescue.",
						"immutables": "The immutables of the escrow contract.",
						"token": "The address of the token to rescue. Zero address for native token."
					}
				},
				"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"details": "Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.",
					"params": {
						"immutables": "The immutables of the escrow contract.",
						"secret": "The secret that unlocks the escrow."
					}
				}
			},
			"title": "Escrow interface for cross-chain atomic swap.",
			"version": 1
		},
		"userdoc": {
			"events": {
				"EscrowCancelled()": {
					"notice": "Emitted on escrow cancellation."
				},
				"EscrowWithdrawal(bytes32)": {
					"notice": "Emitted on successful withdrawal."
				},
				"FundsRescued(address,uint256)": {
					"notice": "Emitted when funds are rescued."
				}
			},
			"kind": "user",
			"methods": {
				"FACTORY()": {
					"notice": "Returns the address of the factory that created the escrow."
				},
				"PROXY_BYTECODE_HASH()": {
					"notice": "Returns the bytecode hash of the proxy contract."
				},
				"RESCUE_DELAY()": {
					"notice": "Returns the delay for rescuing funds from the escrow."
				},
				"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"notice": "Cancels the escrow and returns tokens to a predetermined recipient."
				},
				"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"notice": "Rescues funds from the escrow."
				},
				"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"notice": "Withdraws funds to a predetermined recipient."
				}
			},
			"notice": "Interface implies locking funds initially and then unlocking them with verification of the secret presented.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/escrow/interfaces/IEscrow.sol": "IEscrow"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"contracts/AddressLib.sol": {
			"keccak256": "0x5dbbd2513216eca9660b83e356b1b50d6dd5f854c0106be6bc7df3fff01821d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://71c5a3b82d7cb1c060885ed6a11710fe216af832d30b6dd30d051635e6c4e586",
				"dweb:/ipfs/QmWYnTddAxLhKQq58wwya9NUkhudFoYamGZpcuHc6XdAMR"
			]
		},
		"contracts/escrow/interfaces/IBaseEscrow.sol": {
			"keccak256": "0xe04d997a41e2fb0df08f6eee1519944d7e226d9d816115cc2a6977860c863724",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef01bf4cb93bc9f2ccb0ada3780ae8aae98c59300e1fa40efd1a1211bf2dabe4",
				"dweb:/ipfs/QmSY8bq7C9ZVqHmtuC8kQPAMsg3o2bB2y688JPCGoohZhX"
			]
		},
		"contracts/escrow/interfaces/IEscrow.sol": {
			"keccak256": "0x8b0063cd06290dfc5d4bb20a9bdddff356f3100bd63d5a0c3f1b8d30d028fc10",
			"license": "MIT",
			"urls": [
				"bzz-raw://78e81dc1ba169a0f328efc4824192f8906189e3cb2ed263543ecd1f9a61b7ac6",
				"dweb:/ipfs/QmeaB5ymsLYZhUXrt4TFW6qYBPgLgUMEoAhggqAscZ2pNq"
			]
		},
		"contracts/escrow/libraries/TimelocksLib.sol": {
			"keccak256": "0xd6ad5f65d792a1bc4c40328afed51281b7855ebf69696125cbbec42b695e9379",
			"license": "MIT",
			"urls": [
				"bzz-raw://db449fb7a9bd6d334ed5aeb4e14297a729e2a97fbf20b22821e18446b67bbaf2",
				"dweb:/ipfs/QmXUUBE2dyAF922kCaxhqDr1yL1s7t44di44ewWzEoKG3d"
			]
		}
	},
	"version": 1
}