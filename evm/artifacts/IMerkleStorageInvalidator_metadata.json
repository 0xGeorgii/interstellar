{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "AccessDenied",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidProof",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					}
				],
				"name": "lastValidated",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "secretHash",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"custom:security-contact": "security@1inch.io",
			"kind": "dev",
			"methods": {
				"lastValidated(bytes32)": {
					"params": {
						"key": "Hash of concatenated order hash and 30 bytes of root hash."
					},
					"returns": {
						"index": "Index of the last validated hashed secret.",
						"secretHash": "Last validated hashed secret."
					}
				}
			},
			"title": "Merkle Storage Invalidator interface",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"lastValidated(bytes32)": {
					"notice": "Returns the index of the last validated hashed secret and the hashed secret itself."
				}
			},
			"notice": "Interface to invalidate hashed secrets from an order that supports multiple fills.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/escrow/interfaces/IMerkleStorageInvalidator.sol": "IMerkleStorageInvalidator"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"contracts/escrow/interfaces/IMerkleStorageInvalidator.sol": {
			"keccak256": "0xd17224d668d000818ff16b0546939c025230579122c5ff06ca39c2b11f0d6501",
			"license": "MIT",
			"urls": [
				"bzz-raw://d335075a4479906c6bd9fe6c86a7fa41b04cf2af7b561a31bee24219341b4ff3",
				"dweb:/ipfs/QmSocpVTFVioeKAGecjETXNzHNCQpHuGY5py47W8kHiHRv"
			]
		}
	},
	"version": 1
}