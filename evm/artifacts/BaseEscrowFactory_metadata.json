{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "AccessDenied",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FailedDeployment",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "needed",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientEscrowBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidCreationTime",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidPartialFill",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidProof",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSecretsAmount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotEnoughCredit",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlyFeeBankAccess",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlyLimitOrderProtocol",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ResolverCanNotFillOrder",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SafeTransferFromFailed",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "escrow",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "hashlock",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "Address",
						"name": "taker",
						"type": "uint256"
					}
				],
				"name": "DstEscrowCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "orderHash",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "hashlock",
								"type": "bytes32"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "taker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "Timelocks",
								"name": "timelocks",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct IBaseEscrow.Immutables",
						"name": "srcImmutables",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "chainId",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct IEscrowFactory.DstImmutablesComplement",
						"name": "dstImmutablesComplement",
						"type": "tuple"
					}
				],
				"name": "SrcEscrowCreated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ESCROW_DST_IMPLEMENTATION",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ESCROW_SRC_IMPLEMENTATION",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "FEE_BANK",
				"outputs": [
					{
						"internalType": "contract IFeeBank",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "orderHash",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "hashlock",
								"type": "bytes32"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "taker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "Timelocks",
								"name": "timelocks",
								"type": "uint256"
							}
						],
						"internalType": "struct IBaseEscrow.Immutables",
						"name": "immutables",
						"type": "tuple"
					}
				],
				"name": "addressOfEscrowDst",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "orderHash",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "hashlock",
								"type": "bytes32"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "taker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "Timelocks",
								"name": "timelocks",
								"type": "uint256"
							}
						],
						"internalType": "struct IBaseEscrow.Immutables",
						"name": "immutables",
						"type": "tuple"
					}
				],
				"name": "addressOfEscrowSrc",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "availableCredit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "orderHash",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "hashlock",
								"type": "bytes32"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "taker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "safetyDeposit",
								"type": "uint256"
							},
							{
								"internalType": "Timelocks",
								"name": "timelocks",
								"type": "uint256"
							}
						],
						"internalType": "struct IBaseEscrow.Immutables",
						"name": "dstImmutables",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "srcCancellationTimestamp",
						"type": "uint256"
					}
				],
				"name": "createDstEscrow",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "decreaseAvailableCredit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "allowance",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "salt",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "receiver",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "makerAsset",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "takerAsset",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "makingAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "takingAmount",
								"type": "uint256"
							},
							{
								"internalType": "MakerTraits",
								"name": "makerTraits",
								"type": "uint256"
							}
						],
						"internalType": "struct IOrderMixin.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "takingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"name": "getMakingAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "salt",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "receiver",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "makerAsset",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "takerAsset",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "makingAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "takingAmount",
								"type": "uint256"
							},
							{
								"internalType": "MakerTraits",
								"name": "makerTraits",
								"type": "uint256"
							}
						],
						"internalType": "struct IOrderMixin.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "makingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"name": "getTakingAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "increaseAvailableCredit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "allowance",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					}
				],
				"name": "lastValidated",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "leaf",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "salt",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "receiver",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "makerAsset",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "takerAsset",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "makingAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "takingAmount",
								"type": "uint256"
							},
							{
								"internalType": "MakerTraits",
								"name": "makerTraits",
								"type": "uint256"
							}
						],
						"internalType": "struct IOrderMixin.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "extension",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "orderHash",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "taker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "makingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "takingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "remainingMakingAmount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"name": "postInteraction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "salt",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "receiver",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "makerAsset",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "takerAsset",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "makingAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "takingAmount",
								"type": "uint256"
							},
							{
								"internalType": "MakerTraits",
								"name": "makerTraits",
								"type": "uint256"
							}
						],
						"internalType": "struct IOrderMixin.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "extension",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "orderHash",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "taker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "makingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "takingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "remainingMakingAmount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"name": "preInteraction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "salt",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "maker",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "receiver",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "makerAsset",
								"type": "uint256"
							},
							{
								"internalType": "Address",
								"name": "takerAsset",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "makingAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "takingAmount",
								"type": "uint256"
							},
							{
								"internalType": "MakerTraits",
								"name": "makerTraits",
								"type": "uint256"
							}
						],
						"internalType": "struct IOrderMixin.Order",
						"name": "",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "extension",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "orderHash",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"name": "takerInteraction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"custom:security-contact": "security@1inch.io",
			"details": "Immutable variables must be set in the constructor of the derived contracts.",
			"errors": {
				"FailedDeployment()": [
					{
						"details": "The deployment failed."
					}
				],
				"InsufficientBalance(uint256,uint256)": [
					{
						"details": "The ETH balance of the account is not enough to perform the operation."
					}
				]
			},
			"events": {
				"DstEscrowCreated(address,bytes32,uint256)": {
					"params": {
						"escrow": "The address of the created escrow.",
						"hashlock": "The hash of the secret.",
						"taker": "The address of the taker."
					}
				},
				"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))": {
					"params": {
						"dstImmutablesComplement": "Additional immutables related to the escrow contract on the destination chain.",
						"srcImmutables": "The immutables of the escrow contract that are used in deployment on the source chain."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)": {
					"details": "Verifies the proof and stores the last validated index and hashed secret. Only Limit Order Protocol can call this function."
				}
			},
			"title": "Abstract contract for escrow factory",
			"version": 1
		},
		"userdoc": {
			"events": {
				"DstEscrowCreated(address,bytes32,uint256)": {
					"notice": "Emitted on EscrowDst deployment."
				},
				"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))": {
					"notice": "Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain."
				}
			},
			"kind": "user",
			"methods": {
				"ESCROW_DST_IMPLEMENTATION()": {
					"notice": "See {IEscrowFactory-ESCROW_DST_IMPLEMENTATION}."
				},
				"ESCROW_SRC_IMPLEMENTATION()": {
					"notice": "See {IEscrowFactory-ESCROW_SRC_IMPLEMENTATION}."
				},
				"FEE_BANK()": {
					"notice": "See {IFeeBankCharger-feeBank}."
				},
				"addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"notice": "See {IEscrowFactory-addressOfEscrowDst}."
				},
				"addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))": {
					"notice": "See {IEscrowFactory-addressOfEscrowSrc}."
				},
				"availableCredit(address)": {
					"notice": "See {IFeeBankCharger-availableCredit}."
				},
				"createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)": {
					"notice": "See {IEscrowFactory-createDstEscrow}."
				},
				"decreaseAvailableCredit(address,uint256)": {
					"notice": "See {IFeeBankCharger-decreaseAvailableCredit}."
				},
				"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)": {
					"notice": "See {IAmountGetter-getMakingAmount}"
				},
				"getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)": {
					"notice": "See {IAmountGetter-getTakingAmount}"
				},
				"increaseAvailableCredit(address,uint256)": {
					"notice": "See {IFeeBankCharger-increaseAvailableCredit}."
				},
				"lastValidated(bytes32)": {
					"notice": "See {IMerkleStorageInvalidator-lastValidated}."
				},
				"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)": {
					"notice": "See {IPostInteraction-postInteraction}"
				},
				"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)": {
					"notice": "See {IPreInteraction-preInteraction}"
				},
				"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)": {
					"notice": "See {ITakerInteraction-takerInteraction}."
				}
			},
			"notice": "Contract to create escrow contracts for cross-chain atomic swap.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/escrow/BaseEscrowFactory.sol": "BaseEscrowFactory"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"contracts/AddressLib.sol": {
			"keccak256": "0x5dbbd2513216eca9660b83e356b1b50d6dd5f854c0106be6bc7df3fff01821d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://71c5a3b82d7cb1c060885ed6a11710fe216af832d30b6dd30d051635e6c4e586",
				"dweb:/ipfs/QmWYnTddAxLhKQq58wwya9NUkhudFoYamGZpcuHc6XdAMR"
			]
		},
		"contracts/Context.sol": {
			"keccak256": "0x28ad9de5e26095f685a085591178af7aeac1427af1bf442986b5aee0a5b2a14a",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad3864801aabbcc6f52361a1b86a3d4d342e283cc2036c47a3ef2df7e4a3c51",
				"dweb:/ipfs/QmezNWJGoPBwtHjsQae7dbqjeZgpbB2cHFE5nFBBzGvJFR"
			]
		},
		"contracts/Errors.sol": {
			"keccak256": "0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424",
			"license": "MIT",
			"urls": [
				"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756",
				"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB"
			]
		},
		"contracts/ExtensionLib.sol": {
			"keccak256": "0x054ca2ebc73bc4dd62816bd9a3d384b89454e5e65d9d83c66637c578789d96ca",
			"license": "MIT",
			"urls": [
				"bzz-raw://9dc6a0163be726abd9732ac63c31f2b99a8f9505ae6280e9d2fa13150990d113",
				"dweb:/ipfs/Qmd6CCRPTWE13WPEMTZZqisDkMQXdWm99P5N66CcT4uGaj"
			]
		},
		"contracts/IAmountGetter.sol": {
			"keccak256": "0x877aa31c7903e60289a1ba750e583113b1f317a9dfaeefcbf7fd19b4c62dbd98",
			"license": "MIT",
			"urls": [
				"bzz-raw://d7bbeceff66893fba29928459f2afa4546d19aaacdc3e6450ca51fb216874a86",
				"dweb:/ipfs/QmYny4mRyuGRoRGNmoqYnpU6um3KhoTmfWs1xvLnLLEs3f"
			]
		},
		"contracts/IDaiLikePermit.sol": {
			"keccak256": "0x0bcc9c886acb32f5664e3bfd0640e6fc1de6525b8f6103f25906d040d054ce07",
			"license": "MIT",
			"urls": [
				"bzz-raw://551e3b7d18d5e83727491f6749643a9a1e9a2e253a1a9be56eeb44e4c1b13876",
				"dweb:/ipfs/QmSpGRSD3DDP1EbBbXDPqAbSP58roEvCsosMQCDtSDnEBa"
			]
		},
		"contracts/IERC20.sol": {
			"keccak256": "0x91104f4bcc877f2506e4485b871efe0a6beb5c1ef7de9c374d99d75289905905",
			"license": "MIT",
			"urls": [
				"bzz-raw://57a7ecbec5ff542c117d36c7487386b5653ad21d0a83414e859d4202e069b36f",
				"dweb:/ipfs/QmaPocSUaysdjd1Ksa5kttxRHxhA7XWd6HrQ9teLFRyR6W"
			]
		},
		"contracts/IERC20Permit.sol": {
			"keccak256": "0x08d82b52e80c1a83f792c519388ca1ae86ae441bdfbd7d84addc82ef9c499a9e",
			"license": "MIT",
			"urls": [
				"bzz-raw://a5449dde3b5541f3f653b352bfa0aa4f3e91ab24a110106319baa83940f540a5",
				"dweb:/ipfs/QmUuadcLdSPtqMuuhBgkdAZHrE3tx5rdQ7HCXCsa8RDaTU"
			]
		},
		"contracts/IERC7597Permit.sol": {
			"keccak256": "0x550ff037524afe9ef46d2c54ed59f4048c4216122e80da3b17872e05c163a74e",
			"license": "MIT",
			"urls": [
				"bzz-raw://40df00df81d4a4d2a78105bf5b86694037d885abf30e1e47e286b6e3310bdf48",
				"dweb:/ipfs/QmVqmS8BpSMV8PeiUme1tNDq48zfn71XYxWhb6fLtxCT6f"
			]
		},
		"contracts/IOrderMixin.sol": {
			"keccak256": "0x34ead0b58bd2640652ad6366b4c4ea1370b66d2dd21ffb5d5b831ed54fc9cc71",
			"license": "MIT",
			"urls": [
				"bzz-raw://65b82f8298ed8d9cb9eb3604af3c15129cffa009c5b0150f7f42154093d9ce96",
				"dweb:/ipfs/QmaQoQNVTiJPKB6MVwtemAWrwyKEKR5fLqy7vyfm8oqBEx"
			]
		},
		"contracts/IPermit2.sol": {
			"keccak256": "0x79e985eddaf616078cde10431fb615b577ba83b96ca5f4161cb82939a787a195",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1d3243656736b7e4422a6eb7bbac982760f99674b9d80286e5bf45f1fe04376",
				"dweb:/ipfs/QmacX52RVqLnUgWxji9FkfFSZeGnV6qdxkkX5kMxakYRyW"
			]
		},
		"contracts/IPostInteraction.sol": {
			"keccak256": "0x34e475bf78d8978a6a6ac660f4c4357808bff2b27613dab281b562dc9fda907e",
			"license": "MIT",
			"urls": [
				"bzz-raw://3c35113e8dcba3fc49650e2b48cd1a14e23050b66c748d2323898a0117a01b58",
				"dweb:/ipfs/QmYuhGpycuzAcVvcHt8Z4M7GPYt1XSwd1VvKtyKyeb1e8V"
			]
		},
		"contracts/IPreInteraction.sol": {
			"keccak256": "0xb2deb1dafa99ec8259fe651e8b39f5cfff725143c0394e4eb359729a399a2a55",
			"license": "MIT",
			"urls": [
				"bzz-raw://d07a0f88bad2704d4a1d15a8ee50cc997b830eef82153483d13c624101da8fdb",
				"dweb:/ipfs/QmSv8ZY7zmMJ5pAWaWVzDDN4kn5cPeBvVM61o4nja17u75"
			]
		},
		"contracts/ITakerInteraction.sol": {
			"keccak256": "0xc6c79fdf0d75b02c9ebc50a12c274c2fe8418fcbcdd49359ae58b6115859c5fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://c73fc4a6102e51ced68750cf515daff7d7a4b9f4b380c92c66fc4a086dd4bb07",
				"dweb:/ipfs/QmbNmr96WaNzrvbiz6YZwQGLiCck5u4ujWx8LfRfK9wCY1"
			]
		},
		"contracts/IWETH.sol": {
			"keccak256": "0x2dc6d61d66f1881a6c273b5f30f9a82e6eda4988c7aeaf0b26549a5e10c9fcb9",
			"license": "MIT",
			"urls": [
				"bzz-raw://1695d9fd49960e732d2228a304fe9bc221439293e940fdcb9c17419ccafdcfc1",
				"dweb:/ipfs/QmPZrdz4icyWQeR5Yf1zDQnpH8MmYiHyKofVcwvwNADjRh"
			]
		},
		"contracts/MakerTraitsLib.sol": {
			"keccak256": "0x2077d7a827c3ba2fa53c92b87bc586385c1310c3fe67edffe09c31a22900cbf9",
			"license": "MIT",
			"urls": [
				"bzz-raw://49f7294dcb82d3acd8b7e2f95546cc85e24ceb7e3564a21ebf852544887cda3b",
				"dweb:/ipfs/QmPgzEiFpUHmGYfXF4EEdpCnb9TPnCpoF48bNMGw74vk1b"
			]
		},
		"contracts/Math.sol": {
			"keccak256": "0x38c3845ac06436b72e265731c3546e21b2e792a800af0c355f2039ceb85cdbfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://c63508dd9c15bf8155a8c248518310ad06b1d3f8d42082866fc8ecaa37f8dfda",
				"dweb:/ipfs/QmXiJyT5zGCgPWeLrF1g3fpvbjMkVQBt9MSq3fiA97VsTj"
			]
		},
		"contracts/OffsetsLib.sol": {
			"keccak256": "0xd8218c3b9241501b41fc0f0b579dce00a0b81603582e11f3da28881ed00801a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://039b36fea4d1d12fe0d02ac26bdefd959c6fe447bd73ea0599a49e08f1712999",
				"dweb:/ipfs/QmcyPNSDc2RjksmwYPY3jGAjD9bEhBAWi3qKYWNvtHHZT6"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0xa6428484d54bc2cd4eb2a5632305a4b7783365f8c5fa173ad62c4795bf2839f8",
			"license": "MIT",
			"urls": [
				"bzz-raw://1a7d9efbfeef2f5c28979e8a93eeab25f6c2e85e69fe6261c4c17d15c5c3aadf",
				"dweb:/ipfs/QmQieD54hKvNVXV3RuknW9BnSurgGrEyTnmcKHXg9YHC7E"
			]
		},
		"contracts/Panic.sol": {
			"keccak256": "0xec0c46048fd01751aa22ecddb66df20b702374fd68f3f4b3ae363782f6b31f9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://d32d9af31bc44235f769cf820ec96fd3f0aea9e16a169b244a62e34e482d7d55",
				"dweb:/ipfs/Qmd4Lw5sSLQtfE2vEy29RHzffinDsHgN1pGaS8Eex1F8ks"
			]
		},
		"contracts/RevertReasonForwarder.sol": {
			"keccak256": "0x00dbd12fec0c2696dd0862143457d8a23c998dcabd5d038fc85512ba93467417",
			"license": "MIT",
			"urls": [
				"bzz-raw://2fa738dc80ff7027762294869f2b181177a5c122fe04ceea08c619c544c820aa",
				"dweb:/ipfs/QmUzrDWe6k6Hhfdd5MxUhnW34B8mGJ5pwx65NM9EBLkLCU"
			]
		},
		"contracts/SafeCast.sol": {
			"keccak256": "0x16949b29739a3a20cf5ffe9ca22830a9f9b6deff16ee925827b19ddb5fbc127a",
			"license": "MIT",
			"urls": [
				"bzz-raw://768190c98439f96d5cad1900cc96e24f0749172192be8b5de885c426750c6ecd",
				"dweb:/ipfs/QmWPmxri7eCbAXC7p3qJ14ckPTUDkdE3wuyiMoc1pat5ft"
			]
		},
		"contracts/SafeERC20.sol": {
			"keccak256": "0x2cdc46994aa3302bf2026f5a2ba0650398aaf41278354075544bf42350ee947e",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a65e24d410030f7b192d59a0096213bee88b963822052502572cdb9ee55e9d9",
				"dweb:/ipfs/QmcQH7uVFhTLGxTuqUsiEsc7qH9HE7xGgSQTXijoVUcKUn"
			]
		},
		"contracts/TakerTraitsLib.sol": {
			"keccak256": "0x25d36a3b3645561fc5b3f35c1e93fe60220bd15f9af896b0c6263a3269710fcc",
			"license": "MIT",
			"urls": [
				"bzz-raw://45597b42af6b436271ac8e6577255137557ff72d45883ef4bce01198016d4bb5",
				"dweb:/ipfs/QmamEQ6c5ffZqanpuX52PUf88wPu6Gp4T8LCVVzonAo1uS"
			]
		},
		"contracts/escrow/BaseEscrowFactory.sol": {
			"keccak256": "0xa8b59173558d9a93ff04e437cc4c4a472acb8172295b06078af531add966fbf7",
			"license": "MIT",
			"urls": [
				"bzz-raw://bef9365c3d7c989bb66ece195a3011d882b581514f9f294b4a1d8d17856f6853",
				"dweb:/ipfs/QmXZzuMrBGfY11DTeMK8GTzhygVsg1mcTyXH3b9M7yEokR"
			]
		},
		"contracts/escrow/BaseExtension.sol": {
			"keccak256": "0xb273e23ce9815c7c8d889ef87e787d120d70bb1a4bdd4aecf1a71b11beee0169",
			"license": "MIT",
			"urls": [
				"bzz-raw://d39e138ca8a0f6158dea85d1d21111c992b8d9cdc675274e4b52fd5c0ba97b39",
				"dweb:/ipfs/QmdvT8rUKEoe7s2MaLfpgE8zGiMjJMkpMeqaCgZUWcLxyT"
			]
		},
		"contracts/escrow/Clones.sol": {
			"keccak256": "0x292f98372ed1499f748023937cc260128bf869e3bdde944c9f1eaf562d5cb762",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ec44ff487165f4b987dc1582f14ceaae083dc6477803a6c387f21a5834323b9",
				"dweb:/ipfs/QmXHsyE2CAU4wffqWkKTwJG6k83TkW3zCxPWEAtdADcQFu"
			]
		},
		"contracts/escrow/Create2.sol": {
			"keccak256": "0x02f0faa500d9ca42186fd2f4d7f381777cd2970bfa2fd7fb542c309361aae81c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5f45127145cf2abd405d732ccaeaf467d853a3779bc85e090133e6005d197a4",
				"dweb:/ipfs/Qmdg1VaKkAWQ1qcVWYr9cRuoeGhg2QvrJPyDukyR7dwf8d"
			]
		},
		"contracts/escrow/EscrowFactoryContext.sol": {
			"keccak256": "0xb7555886ff3c177bb87e17ba925fe3d09aa800a72b5ccb3407190ef71a839258",
			"license": "MIT",
			"urls": [
				"bzz-raw://03642340181eb69d360e0f068edaa7b79b9d974588aae5527c653ea52528cbe1",
				"dweb:/ipfs/QmeX9kwjQoJoSvjyv6KWP1UVpfSk3zDexm6oxzbZcGaTqm"
			]
		},
		"contracts/escrow/ExtensionLib.sol": {
			"keccak256": "0xaa8ce41f4681d88b4bc2f109c538031248b3a6d384a959777383ab33f5ef4696",
			"license": "MIT",
			"urls": [
				"bzz-raw://248bd4ad5a0abb76f435f360d4017851b55ce300662ea0c6a86b17b3175a947c",
				"dweb:/ipfs/QmbmMiZBmFh6Xc7vPe87oviq6wL57P2akdN2U5YRcT6x6e"
			]
		},
		"contracts/escrow/FeeBank.sol": {
			"keccak256": "0x75bcef06df42a8009c48bf4104c70175b412009e0600e4555ff214377635e7cb",
			"license": "MIT",
			"urls": [
				"bzz-raw://9e869a94d441fb9501149d589be320cd84e3370cc8400a9e6955fd941dacc18b",
				"dweb:/ipfs/QmbcvkryfEWBe75ZV6C9Y8ipgHe5zNqGb8ZY7sTBsrt1Kf"
			]
		},
		"contracts/escrow/FeeBankCharger.sol": {
			"keccak256": "0xb7ee8a95eff00f068151439d16da292557c401e1bf8c2dc5806bc3ea6f6e3d09",
			"license": "MIT",
			"urls": [
				"bzz-raw://37c1b07aab65be7a79ad9f1204df33c88927b2da181bb122743bd3d367ed60d3",
				"dweb:/ipfs/QmPi6jRqWJCPzSNHasTtJm4DEJsJTUposwoy2Bo9uBNRRs"
			]
		},
		"contracts/escrow/Hashes.sol": {
			"keccak256": "0x89c4d3509df3e1387752bf07f04bdf967ddb424d8917808bc9e6e4bc7995db0e",
			"license": "MIT",
			"urls": [
				"bzz-raw://2909c1aa5cc0ef4288e88c361fc114838aeb2c9396f83886ab9c52b39baf602f",
				"dweb:/ipfs/QmS246CQ6JN1dH3khhZvURLFEgfJ1DiV7J1VYxisfqLVnm"
			]
		},
		"contracts/escrow/IERC20Metadata.sol": {
			"keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
			"license": "MIT",
			"urls": [
				"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
				"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
			]
		},
		"contracts/escrow/IERC20MetadataUppercase.sol": {
			"keccak256": "0x7d97ae2903bd1ee8f24ab7bbf099d075f2bbd451b0f755366479d249780d0c68",
			"license": "MIT",
			"urls": [
				"bzz-raw://dc9fa6bc781aa748e35b1c45d3072e6c49eb6d61b954327ef135f67093d75339",
				"dweb:/ipfs/Qmc8e1g1c18b7J4m1DqFYvgpeuA7Pabk2Sz59mJgCBwSRB"
			]
		},
		"contracts/escrow/IFeeBank.sol": {
			"keccak256": "0x2d03d415bbaac2c6b26bd33899adc942a3d59ef50e46f035b89eab2bddb98d58",
			"license": "MIT",
			"urls": [
				"bzz-raw://5c7b806a040a59a41cdd50f60a0d74325a4610da64444ae0e51a7481649016f0",
				"dweb:/ipfs/QmQ3aWgMc74QGPT8aYMtTaMM32qcRwVcwTU5M2kcpaCQYK"
			]
		},
		"contracts/escrow/IFeeBankCharger.sol": {
			"keccak256": "0xef4750e40bf2488873716b2e2f9315e69ac9e9c65bb5de2a16e39be6f3b483ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://640bcc74edee9d439ef412e782cd0ea889efd024486879cf5bad0242d831afda",
				"dweb:/ipfs/QmRQg6dCgA7z4vQgn3sGZhNtJ4pLTDbvBbkTfw77sr11GE"
			]
		},
		"contracts/escrow/MerkleProof.sol": {
			"keccak256": "0x2fe0f666490bd88fa762c0c49cbba17e847e45cf259d744d6797636392beee41",
			"license": "MIT",
			"urls": [
				"bzz-raw://1ad7a55cdd08f0c336167e50e2fd172142de995409a81ffc0602792262f2e86c",
				"dweb:/ipfs/QmY7g2r17jJ6ZGoJ3DzSa7abQzvUXJATGy4sd8SEPt7oA3"
			]
		},
		"contracts/escrow/MerkleStorageInvalidator.sol": {
			"keccak256": "0x251a5ee28e19f3e262c01d7d98f7de2a66590c7ecf226a080a37222c4172a2b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://9438656187363cc9db67789e0844cbdaebe94ed4360a9b8323ad38f94aa958d2",
				"dweb:/ipfs/QmNiPyMauM3jMVLw6ZFNUa9F4UdsLWoqqWMofRrqraWWyk"
			]
		},
		"contracts/escrow/ResolverValidationExtension.sol": {
			"keccak256": "0x74d639175d65ef02c66678326edea238da945456c17f1b46d110ebfcfb4aa589",
			"license": "MIT",
			"urls": [
				"bzz-raw://4d3594ed41622af2b941171f2e0522c1c681e6c8cde9a1c60e41ee20ce6c9f2e",
				"dweb:/ipfs/QmbE3f8N7F22X1FSj37fZP8t13t8B7LEXhDkGVQnNR53ZL"
			]
		},
		"contracts/escrow/StringUtil.sol": {
			"keccak256": "0xb05bff1a3a5461b1f16248220067a2bd52e5c7e41c14be0aebb6520985b67ccb",
			"license": "MIT",
			"urls": [
				"bzz-raw://03495f22f0128969aef7dd46f65e215851cbd52cfa4d87eac0c930c5cd84826d",
				"dweb:/ipfs/QmekA9rM82XXPKdHpCwAYhirtSCB5AJo16TUvyBYVWhKhZ"
			]
		},
		"contracts/escrow/UniERC20.sol": {
			"keccak256": "0x509b388a006916c896a6163a8e471140c0673e8c74b14943d175613d9bdd7569",
			"license": "MIT",
			"urls": [
				"bzz-raw://05778d9f9f5e71bccab128648c34d41c24e2b3b27aba84dbaab572e70427e471",
				"dweb:/ipfs/QmRVXiF6UdtfFtpRuLVuuBBsPpRphtLcuAXfMJgZLgMTUU"
			]
		},
		"contracts/escrow/interfaces/IBaseEscrow.sol": {
			"keccak256": "0xe04d997a41e2fb0df08f6eee1519944d7e226d9d816115cc2a6977860c863724",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef01bf4cb93bc9f2ccb0ada3780ae8aae98c59300e1fa40efd1a1211bf2dabe4",
				"dweb:/ipfs/QmSY8bq7C9ZVqHmtuC8kQPAMsg3o2bB2y688JPCGoohZhX"
			]
		},
		"contracts/escrow/interfaces/IEscrowFactory.sol": {
			"keccak256": "0xfb3454f375ee259573cc102d40196fcfeca01b9efe9cda5e0ca70904953098d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://a55845ead5ca7c285655db00d4496d69b5bf827cb5879def98747086928c1f93",
				"dweb:/ipfs/QmbMCjNg9fVYwjeC9u9jp6JEZVVBaevu2ExraPAHotX6BX"
			]
		},
		"contracts/escrow/interfaces/IMerkleStorageInvalidator.sol": {
			"keccak256": "0xd17224d668d000818ff16b0546939c025230579122c5ff06ca39c2b11f0d6501",
			"license": "MIT",
			"urls": [
				"bzz-raw://d335075a4479906c6bd9fe6c86a7fa41b04cf2af7b561a31bee24219341b4ff3",
				"dweb:/ipfs/QmSocpVTFVioeKAGecjETXNzHNCQpHuGY5py47W8kHiHRv"
			]
		},
		"contracts/escrow/libraries/ImmutablesLib.sol": {
			"keccak256": "0x61b4a772ba17cbb1e52d09c71903d694a6f032c7c3bff76ba109a2d2b606fcca",
			"license": "MIT",
			"urls": [
				"bzz-raw://fdb8ddefa42e86bc8456c01bada27d8d68e52a64c1f117fc939df6052ca9f93b",
				"dweb:/ipfs/QmciZYyGkJHxsoDQHGnXYCf9R6eKpHz88L161MMiozTvwH"
			]
		},
		"contracts/escrow/libraries/TimelocksLib.sol": {
			"keccak256": "0xd6ad5f65d792a1bc4c40328afed51281b7855ebf69696125cbbec42b695e9379",
			"license": "MIT",
			"urls": [
				"bzz-raw://db449fb7a9bd6d334ed5aeb4e14297a729e2a97fbf20b22821e18446b67bbaf2",
				"dweb:/ipfs/QmXUUBE2dyAF922kCaxhqDr1yL1s7t44di44ewWzEoKG3d"
			]
		}
	},
	"version": 1
}